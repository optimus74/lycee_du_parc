I"õ7<h2 id="pr√©sentation-de-la-structure-de-donn√©es-dictionnaires">Pr√©sentation de la structure de donn√©es <em>dictionnaires</em></h2>

<ul>
  <li>
    <p><a href="https://peertube.lyceeconnecte.fr/videos/watch/86be0059-a3c1-41ec-952a-79dea6310c87">Pr√©sentation video par Pierre Marquestaut</a></p>
  </li>
  <li>
    <p>En Python la structure de donn√©es <strong>dictionnaire</strong> est impl√©ment√©e par le type <code class="language-plaintext highlighter-rouge">dict</code>. Voici un  exemple de construction de dictionnaire en Python et de manipulation avec les op√©rations de base : d√©finition, acc√®s en lecture / √©criture,test d‚Äôappartenance, parcours.</p>
  </li>
</ul>

<pre data-executable="">
annuaire = {}  #initialisation d'un dictionnaire vide
annuaire = { 'Victor' : '06 44 44 44 44'} #on peut aussi initialiser un dictionnaire par extension
print("Lecture du num√©ro de t√©l√©phone de Victor dans le dictionnaire annuaire ", annuaire['Victor'])
print("Modification du num√©ro de Victor dans le dictionnaire annuaire ")
annuaire['Victor'] = '06 33 33 33 33'
print("Ajout  du num√©ro de Val√©rie dans le dictionnaire annuaire ")
annuaire['Val√©rie'] = '06 22 22 22 22'
print("Affichage du dictionnaire annuaire")
print("Test d'appartenance de la clef 'Antoine' au dictionnaire annuaire", 'Antoine' in annuaire)
print("Test d'appartenance de la clef 'Val√©rie' au dictionnaire annuaire", 'Val√©rie' in annuaire)
print("Parcours du dictionnaire annuaire par clefs (ici les personnes) :")
for clef in annuaire:
    print("Clef : ", clef, " Valeur : ", annuaire[clef])
print("Parcours du dictionnaire annuaire par tuple (clef, valeur) (ici (personne, num√©ro)) :")
for clef, valeur in annuaire.items():
    print("Clef : ", clef, " Valeur : ", valeur)
</pre>

<p>Si Binder ne se lance pas, le <em>snippet</em> sur <a href="https://glot.io/snippets/fvk5o67xl0">glot.io</a> :</p>

<iframe src="https://glot.io/snippets/fvk5o67xl0/embed" frameborder="0" scrolling="no" sandbox="allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts" width="800" height="600"></iframe>

<p>Le m√™me <em>snippet</em> mais sur <a href="https://console.basthon.fr/?script=eJyVUk1rwkAQvQv-hyEeNgEpRaUHoQfptYUeSi_Fw5KMdUrcDfshheIP8nf4xzqbmE0ULTUsIdl9-96bNyOV8pIMwiP87ABGpMiRLMlKR1pBITy_KA8_qsZtqcDhQPaugXhngDYC5iDuH2A2i0vsYMQsFXoH0ltLEPnRwDl1JQ3gt0NleWs4qAwplybPmDvPp4UH5TeHvdFQILjDvjzsq7VWGH4bB1BIZaHEU9roNRnH74_W8zKLQi-6oBXlx8JP1P5Hn3W5dPycUAhlOo1LRMXFl-ZgzrUkF2YIb1M7Xop6k0lcPb0V17eWn3WYF2mTLo43tI77LytuC_dEqrxOupSQl7gCsVBOk0LBjb3CNe6BSMX9_0vEqv7U6FAXRV6lybU39mrN9dwFQQsp5cSRW55YYxmHNoN5yGSlG0hfYj4cAD9HmadwOg8zFnBjSEIj0ZtmL3YqHC5vNed8xXOQNsTbmjZrvKat0XE7QtmZ4_ZC3_kdOdzYNLulgqPsL_DAbG8">basthon</a></p>

<h2 id="une-premi√®re-utilisation-des-dictionnaires--r√©solution-dun-probl√®me-sur-codingame">Une premi√®re utilisation des dictionnaires : r√©solution d‚Äôun probl√®me sur CodinGame</h2>

<ol>
  <li>Lire l‚Äô√©nonc√© du probl√®me sur la page <a href="https://www.codingame.com/ide/puzzle/scrabble">https://www.codingame.com/ide/puzzle/scrabble</a>.</li>
  <li>Pour r√©soudre ce probl√®me on propose de compl√©ter le code ci-dessous :
    <ul>
      <li>dans<code class="language-plaintext highlighter-rouge">spyder</code>, compl√©ter chaque fonction   en respectant sa sp√©cifications des fonctions et en v√©rifiant  les tests unitaires qui l‚Äôaccompagnent.</li>
      <li>compl√©ter le code du programme principal</li>
      <li>soumettre son code aux validateurs sur la page <a href="https://www.codingame.com/ide/puzzle/scrabble">https://www.codingame.com/ide/puzzle/scrabble</a>.</li>
    </ul>
  </li>
</ol>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#dictionnaire des valeurs des lettres minuscules au scrabble
</span><span class="n">valeur</span> <span class="o">=</span> <span class="p">{</span>
    <span class="s">'a'</span> <span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
    <span class="s">'e'</span> <span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
    <span class="s">'i'</span> <span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
    <span class="s">'o'</span> <span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
    <span class="s">'n'</span> <span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
    <span class="s">'r'</span> <span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
    <span class="s">'t'</span> <span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
    <span class="s">'l'</span> <span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
    <span class="s">'s'</span> <span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
    <span class="s">'u'</span> <span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
    <span class="s">'d'</span> <span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
    <span class="s">'g'</span> <span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
    <span class="s">'b'</span> <span class="p">:</span> <span class="mi">3</span><span class="p">,</span> <span class="s">'c'</span> <span class="p">:</span> <span class="mi">3</span><span class="p">,</span> <span class="s">'m'</span> <span class="p">:</span> <span class="mi">3</span><span class="p">,</span> <span class="s">'p'</span> <span class="p">:</span> <span class="mi">3</span><span class="p">,</span>
    <span class="s">'f'</span> <span class="p">:</span> <span class="mi">4</span><span class="p">,</span> <span class="s">'h'</span> <span class="p">:</span> <span class="mi">4</span><span class="p">,</span> <span class="s">'v'</span> <span class="p">:</span> <span class="mi">4</span><span class="p">,</span> <span class="s">'w'</span> <span class="p">:</span> <span class="mi">4</span><span class="p">,</span> <span class="s">'y'</span> <span class="p">:</span> <span class="mi">4</span><span class="p">,</span>
    <span class="s">'k'</span> <span class="p">:</span> <span class="mi">5</span><span class="p">,</span> 
    <span class="s">'j'</span> <span class="p">:</span> <span class="mi">8</span><span class="p">,</span> <span class="s">'x'</span> <span class="p">:</span> <span class="mi">8</span><span class="p">,</span>
    <span class="s">'q'</span> <span class="p">:</span> <span class="mi">10</span><span class="p">,</span> <span class="s">'z'</span> <span class="p">:</span> <span class="mi">10</span><span class="p">}</span>

<span class="k">def</span> <span class="nf">signature</span><span class="p">(</span><span class="n">mot</span><span class="p">):</span>
    <span class="s">"""Param√®tre : mot de type str
    Valeur renvoy√©e : un dictionnaire repr√©sentant le nombre d'occurences
    de chaque lettre minuscule de l'alphabet dans mot"""</span> 
    <span class="n">sig</span>  <span class="o">=</span> <span class="p">{}</span>  <span class="c1">#dictionnaire vide
</span>    <span class="k">for</span> <span class="n">c</span> <span class="ow">in</span> <span class="n">mot</span><span class="p">:</span>
        <span class="s">"√† compl√©ter"</span>
    <span class="k">return</span> <span class="n">sig</span>

<span class="c1">#Tests unitaires de la fonction signature
</span><span class="k">assert</span> <span class="n">signature</span><span class="p">(</span><span class="s">""</span><span class="p">)</span> <span class="o">==</span> <span class="p">{}</span>
<span class="k">assert</span> <span class="n">signature</span><span class="p">(</span><span class="s">"ananas"</span><span class="p">)</span> <span class="o">==</span> <span class="p">{</span><span class="s">'a'</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span> <span class="s">'n'</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span> <span class="s">'s'</span><span class="p">:</span> <span class="mi">1</span><span class="p">}</span>
<span class="k">assert</span> <span class="n">signature</span><span class="p">(</span><span class="s">"abcd"</span><span class="p">)</span> <span class="o">==</span> <span class="p">{</span><span class="s">'a'</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s">'b'</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s">'c'</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s">'d'</span><span class="p">:</span> <span class="mi">1</span><span class="p">}</span>


<span class="k">def</span> <span class="nf">score_mot</span><span class="p">(</span><span class="n">mot</span><span class="p">,</span> <span class="n">valeur</span><span class="p">):</span>
    <span class="s">"""Param√®tre : mot de type str, 
    valeur de type dict associe √† chaque lettre minuscule sa valeur au scrabble
    Valeur renvoy√©e : score du mot au scrabble"""</span> 
    <span class="n">s</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="s">"√† compl√©ter"</span>
    <span class="k">return</span> <span class="n">s</span>

<span class="c1">#Tests unitaires de la fonction signature
</span><span class="k">assert</span> <span class="n">score_mot</span><span class="p">(</span><span class="s">""</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span>
<span class="k">assert</span> <span class="n">score_mot</span><span class="p">(</span><span class="s">"zazou"</span><span class="p">)</span> <span class="o">==</span> <span class="mi">23</span>
<span class="k">assert</span> <span class="n">score_mot</span><span class="p">(</span><span class="s">"ananas"</span><span class="p">)</span> <span class="o">==</span> <span class="mi">6</span>


<span class="k">def</span> <span class="nf">mot_possible</span><span class="p">(</span><span class="n">mot</span><span class="p">,</span> <span class="n">sig_lettres</span><span class="p">):</span>
    <span class="s">"""Param√®tre : mot de type str
    sig_lettres de type dict repr√©sente la signature des lettres disponibles
    Valeur renvoy√©e : un bool√©en indiquant si sig_mot compatible avec  sig_lettres
    et donc si le mot peut √™tre compos√© avec les lettres fournies"""</span>
    <span class="n">sig_mot</span> <span class="o">=</span> <span class="n">signature</span><span class="p">(</span><span class="n">mot</span><span class="p">)</span>
    <span class="s">"√† compl√©ter"</span>


<span class="c1">#Tests unitaires de la fonction mot_possible
</span><span class="k">assert</span> <span class="n">mot_possible</span><span class="p">(</span><span class="s">"zazou"</span><span class="p">,</span> <span class="p">{</span><span class="s">"a"</span> <span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s">"b"</span> <span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s">"o"</span> <span class="p">:</span> <span class="mi">2</span><span class="p">,</span> <span class="s">"u"</span> <span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s">"z"</span> <span class="p">:</span> <span class="mi">2</span><span class="p">})</span> <span class="o">==</span> <span class="bp">True</span>
<span class="k">assert</span> <span class="n">mot_possible</span><span class="p">(</span><span class="s">"zazou"</span><span class="p">,</span> <span class="p">{</span><span class="s">"b"</span> <span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s">"o"</span> <span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s">"u"</span> <span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s">"z"</span> <span class="p">:</span> <span class="mi">2</span><span class="p">})</span> <span class="o">==</span> <span class="bp">False</span>
<span class="k">assert</span> <span class="n">mot_possible</span><span class="p">(</span><span class="s">"zazou"</span><span class="p">,</span> <span class="p">{</span><span class="s">"a"</span> <span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s">"o"</span> <span class="p">:</span> <span class="mi">2</span><span class="p">,</span> <span class="s">"u"</span> <span class="p">:</span> <span class="mi">3</span><span class="p">,</span> <span class="s">"z"</span> <span class="p">:</span> <span class="mi">1</span><span class="p">})</span> <span class="o">==</span> <span class="bp">False</span>

<span class="c1">#Programme principal
# saisie du nombre de mots du dictionnaire
</span><span class="n">n</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">())</span>
<span class="c1"># saisie des mots du dictionnaire dans une liste
</span><span class="n">dico</span> <span class="o">=</span> <span class="p">[</span><span class="nb">input</span><span class="p">().</span><span class="n">rstrip</span><span class="p">()</span> <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">n</span><span class="p">)]</span>
<span class="n">letters</span> <span class="o">=</span> <span class="nb">input</span><span class="p">().</span><span class="n">rstrip</span><span class="p">()</span>
<span class="n">sig_lettres</span> <span class="o">=</span> <span class="n">signature</span><span class="p">(</span><span class="n">letters</span><span class="p">)</span>
<span class="n">smax</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span>
<span class="n">mot_max</span> <span class="o">=</span> <span class="s">""</span>
<span class="c1"># boucle sur les mots du dictionnaire
</span><span class="k">for</span> <span class="n">mot</span> <span class="ow">in</span> <span class="n">dico</span><span class="p">:</span>
    <span class="s">"√† compl√©ter"</span>


<span class="k">print</span><span class="p">(</span><span class="n">mot_max</span><span class="p">)</span>
</code></pre></div></div>
:ET