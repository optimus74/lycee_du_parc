I" <ul>
  <li><a href="#crÃ©dits">CrÃ©dits</a></li>
  <li><a href="#situation-daccroche">Situation dâ€™accroche</a></li>
  <li><a href="#dÃ©finition-dun-tableau">DÃ©finition dâ€™un tableau</a></li>
  <li><a href="#tableaux-en-python">Tableaux en Python</a></li>
  <li><a href="#accÃ¨s-aux-Ã©lÃ©ments-dun-tableau">AccÃ¨s aux Ã©lÃ©ments dâ€™un tableau</a></li>
  <li><a href="#construction-dun-tableau">Construction dâ€™un tableau</a></li>
  <li><a href="#opÃ©rations-sur-les-tableaux">OpÃ©rations sur les tableaux</a></li>
  <li><a href="#parcours-dun-tableau">Parcours dâ€™un tableau</a></li>
  <li><a href="#aliasing">Aliasing</a>
    <ul>
      <li><a href="#aliasing-et-copie-de-tableau">Aliasing et copie de tableau</a></li>
      <li><a href="#aliasing-et-passage-de-tableau-en-paramÃ¨tre-dune-fonction">Aliasing et passage de tableau en paramÃ¨tre dâ€™une fonction</a></li>
    </ul>
  </li>
  <li><a href="#mÃ©thodes-de-tableau-dynamique-en-python">MÃ©thodes de tableau dynamique en Python</a>
    fonction](#aliasing-et-passage-de-tableau-en-paramÃ¨tre-dune-fonction)</li>
  <li><a href="#mÃ©thodes-de-tableau-dynamique-en-python">MÃ©thodes de tableau dynamique en
Python</a></li>
</ul>

<!-- DÃ©finition des hyperliens  -->

<h1 id="crÃ©dits">CrÃ©dits</h1>

<p><em>Ce cours est largement inspirÃ© des chapitres 5 et 8 du manuel NSI de la
collection Tortue chez Ellipse, auteurs : Ballabonski, Conchon,
Filliatre, Nâ€™Guyen. Le prepabac PremiÃ¨re NSI de Guillaume Connan chez
Hatier a Ã©galement Ã©tÃ© consultÃ©.</em></p>

<!-- DÃ©finition des hyperliens  -->

<h1 id="situation-daccroche">Situation dâ€™accroche</h1>

<p><strong>Exercice 1</strong></p>

<ol>
  <li>Ã‰crire une fonction <code class="language-plaintext highlighter-rouge">moyenne3notes(a, b, c)</code> qui renvoie la moyenne
arithmÃ©tique dâ€™une sÃ©rie de 3 notes <code class="language-plaintext highlighter-rouge">a, b, c</code>.</li>
  <li>Proposer une fonction <code class="language-plaintext highlighter-rouge">moyenne(n)</code> qui prend en paramÃ¨tres un nombre
de notes et retourne la moyenne de ces notes saisies par
lâ€™utilisateur.</li>
  <li>Quel(s) mÃ©canisme(s) pourrai(en)t nous permettre dâ€™Ã©crire une
fonction qui calcule la moyenne dâ€™une sÃ©rie de notes sans
interaction avec lâ€™utilisateur du programme ?</li>
</ol>

<h1 id="dÃ©finition-dun-tableau">DÃ©finition dâ€™un tableau</h1>

<p><strong>DÃ©finition 1</strong></p>

<ul>
  <li>Un objet est un <strong>conteneur</strong> sâ€™il peut conteneur plusieurs objets.</li>
  <li>Un <strong>conteneur</strong> est une <strong>sÃ©quence</strong> sâ€™il contient une <strong>collection
ordonnÃ©e</strong> dâ€™objets qui sont accessibles par leur <strong>index</strong> dans la
sÃ©quence.</li>
  <li>Un <strong>tableau</strong> est une structure de donnÃ©es qui est un <strong>conteneur</strong>
et une <strong>sÃ©quence</strong>. Il permet de stocker plusieurs Ã©lÃ©ments dans
une seule variable et dâ€™y accÃ©der par leur <strong>index</strong>.</li>
</ul>

<p><img src="images/tableau0.png" alt="tableau0" /></p>

<h1 id="tableaux-en-python">Tableaux en Python</h1>

<p><strong>Point de cours 1</strong></p>

<ul>
  <li>En <a href="https://docs.python.org/3/tutorial/datastructures.html">Python</a>,
les tableaux sont implÃ©mentÃ©s dans le type <code class="language-plaintext highlighter-rouge">list</code> et on les nomme
souvent listes mÃªme si les listes dÃ©signent en gÃ©nÃ©ral une autre
structure de donnÃ©es. Le type <code class="language-plaintext highlighter-rouge">list</code> est suffisamment flexible pour
reprÃ©senter la structure de donnÃ©es tableau et dâ€™autres comme les
listes, piles, files â€¦ <em>Dans la suite de ce cours, on dÃ©signe par
tableaux, les objets de type <code class="language-plaintext highlighter-rouge">list</code> du langage
<a href="https://docs.python.org/3/tutorial/datastructures.html">Python</a>.
Dans les exercices, comme dans les QCM dâ€™E3C, on rencontrera parfois
lâ€™appellation Python liste pour dÃ©signer la structure de donnÃ©es
tableau</em></li>
  <li>Un tableau
<a href="https://docs.python.org/3/tutorial/datastructures.html">Python</a> est
une expression dÃ©limitÃ©e par des crochets et les Ã©lÃ©ments dans
lâ€™ordre croissant des index de gauche Ã  droite sont sÃ©parÃ©s par le
symbole virgule <code class="language-plaintext highlighter-rouge">,</code> :</li>
</ul>

<!-- end list -->

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="o">&gt;&gt;&gt;</span> <span class="n">t</span> <span class="o">=</span> <span class="p">[</span><span class="mi">4</span><span class="p">,</span> <span class="mi">20</span><span class="p">,</span> <span class="mi">10</span><span class="p">]</span> <span class="c1"># on affecte le tableau [4, 20, 10] Ã  t
</span>  <span class="o">&gt;&gt;&gt;</span> <span class="nb">len</span><span class="p">(</span><span class="n">t</span><span class="p">)</span>
  <span class="mi">3</span>
  <span class="o">&gt;&gt;&gt;</span> <span class="n">t</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
  <span class="mi">4</span>
  <span class="o">&gt;&gt;&gt;</span> <span class="n">t</span><span class="p">[</span><span class="nb">len</span><span class="p">(</span><span class="n">t</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
  <span class="mi">10</span>
  <span class="o">&gt;&gt;&gt;</span> <span class="n">t</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span>
  <span class="n">Traceback</span> <span class="p">(</span><span class="n">most</span> <span class="n">recent</span> <span class="n">call</span> <span class="n">last</span><span class="p">):</span>
    <span class="n">File</span> <span class="s">"&lt;stdin&gt;"</span><span class="p">,</span> <span class="n">line</span> <span class="mi">1</span><span class="p">,</span> <span class="ow">in</span> <span class="o">&lt;</span><span class="n">module</span><span class="o">&gt;</span>
  <span class="nb">IndexError</span><span class="p">:</span> <span class="nb">list</span> <span class="n">index</span> <span class="n">out</span> <span class="n">of</span> <span class="nb">range</span>   
  <span class="o">&gt;&gt;&gt;</span> <span class="n">t</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="mi">6</span>
  <span class="o">&gt;&gt;&gt;</span> <span class="n">t</span>
  <span class="p">[</span><span class="mi">6</span><span class="p">,</span> <span class="mi">20</span><span class="p">,</span> <span class="mi">10</span><span class="p">]</span>
</code></pre></div></div>

<ul>
  <li>La sÃ©quence de valeurs contenue dans un tableau est indexÃ©e Ã  partir
de 0.</li>
  <li>Le <strong>nombre dâ€™Ã©lÃ©ments</strong> dâ€™un tableau affectÃ© Ã  une variable <code class="language-plaintext highlighter-rouge">t</code> est
donnÃ© par la fonction <code class="language-plaintext highlighter-rouge">len</code> avec <code class="language-plaintext highlighter-rouge">len(t)</code>. Un <strong>tableau vide</strong> est
notÃ© <code class="language-plaintext highlighter-rouge">[]</code>.</li>
  <li>On accÃ¨de Ã  lâ€™Ã©lÃ©ment dâ€™index <code class="language-plaintext highlighter-rouge">k</code> avec la syntaxe <code class="language-plaintext highlighter-rouge">t[k]</code>.</li>
  <li>On peut manipuler lâ€™Ã©lÃ©ment dâ€™index <code class="language-plaintext highlighter-rouge">k</code> comme une variable et
modifier sa valeur par une affectation avec la syntaxe <code class="language-plaintext highlighter-rouge">t[k] =
valeur</code>.</li>
  <li>On peut considÃ©rer que lâ€™accÃ¨s et la modification dâ€™un Ã©lÃ©ment Ã 
partir de son index se fait en <strong>temps constant</strong>, car les Ã©lÃ©ments
sont stockÃ©s de faÃ§on contigue en mÃ©moire et lâ€™index donne le nombre
de dÃ©calages depuis le premier Ã©lÃ©ment.</li>
  <li>Un tableau est <strong>itÃ©rable</strong>, câ€™est-Ã -dire quâ€™on peut parcourir ses
Ã©lÃ©ments avec une boucle <code class="language-plaintext highlighter-rouge">for</code>:</li>
</ul>

<!-- end list -->

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="k">for</span> <span class="n">e</span> <span class="ow">in</span> <span class="n">t</span><span class="p">:</span>
<span class="p">...</span>     <span class="k">print</span><span class="p">(</span><span class="n">e</span><span class="p">)</span>
<span class="p">...</span> 
<span class="mi">4</span>
<span class="mi">20</span>
<span class="mi">10</span>
</code></pre></div></div>

<ul>
  <li>En <a href="https://docs.python.org/3/tutorial/datastructures.html">Python</a>,
les tableaux peuvent contenir des Ã©lÃ©ments de types hÃ©tÃ©rogÃ¨nes mais
nous manipulerons principalement des tableaux homogÃ¨nes (types <code class="language-plaintext highlighter-rouge">int,
float, string</code>, <code class="language-plaintext highlighter-rouge">bool</code>).</li>
  <li>En <a href="https://docs.python.org/3/tutorial/datastructures.html">Python</a>,
les tableaux sont <strong>dynamiques</strong>, leur taille peut varier.</li>
</ul>

<h1 id="accÃ¨s-aux-Ã©lÃ©ments-dun-tableau">AccÃ¨s aux Ã©lÃ©ments dâ€™un tableau</h1>

<ul>
  <li>Dans un tableau <code class="language-plaintext highlighter-rouge">tab</code>, chaque Ã©lÃ©ment de la sÃ©quence ordonnÃ©e est
repÃ©rÃ© par son index <code class="language-plaintext highlighter-rouge">k</code> qui permet dâ€™accÃ©der Ã  lâ€™Ã©lÃ©ment avec
lâ€™expression <code class="language-plaintext highlighter-rouge">tab[k]</code> ou de le modifier avec lâ€™instruction <code class="language-plaintext highlighter-rouge">tab[k]
= valeur</code>.</li>
  <li><a href="https://docs.python.org/3/tutorial/datastructures.html">Python</a>
permet Ã©galement dâ€™extraire un sous-tableau dâ€™un tableau <code class="language-plaintext highlighter-rouge">tab</code> avec
lâ€™expression <code class="language-plaintext highlighter-rouge">tab[debut:fin]</code> qui reprÃ©sente la sous-sÃ©quence de
<code class="language-plaintext highlighter-rouge">fin - debut</code> Ã©lÃ©ments, entre lâ€™Ã©lÃ©ment dâ€™index <code class="language-plaintext highlighter-rouge">debut</code> inclus et
lâ€™Ã©lÃ©ment dâ€™index <code class="language-plaintext highlighter-rouge">fin</code> exclu, comme pour <code class="language-plaintext highlighter-rouge">range(debut, fin)</code>. Ce
mÃ©canisme de dÃ©coupage en tranches est dÃ©signÃ© par le terme de
<em>slicing</em>.</li>
  <li><a href="https://docs.python.org/3/tutorial/datastructures.html">Python</a>
permet de repÃ©rer les Ã©lÃ©ments avec des index nÃ©gatifs reprÃ©sentant
le dÃ©calage par rapport Ã  la la fin de la sÃ©quence, mais nous ne les
utiliserons pas car ils sont source dâ€™erreurs.</li>
</ul>

<p><img src="images/slices.png" alt="tranches" /></p>

<p><em>Figure modifiÃ©e Ã  partir dâ€™une source de Louis Leskow inspirÃ©e dâ€™un
memento de Laurent Pointal</em></p>

<ul>
  <li>On peut tester lâ€™appartenance dâ€™un Ã©lÃ©ment Ã  un tableau avec
lâ€™opÃ©rateur <code class="language-plaintext highlighter-rouge">in</code> et sa nÃ©gation <code class="language-plaintext highlighter-rouge">not in</code>. Cette opÃ©ration
sâ€™effectue en moyenne en coÃ»t proportionnel Ã  la taille du
tableau.</li>
</ul>

<!-- end list -->

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="n">t</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="mi">6</span><span class="p">))</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">t</span>
<span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="mi">4</span> <span class="ow">in</span> <span class="n">t</span>
<span class="bp">True</span>
<span class="o">&gt;&gt;&gt;</span> <span class="mi">6</span> <span class="ow">in</span> <span class="n">t</span>
<span class="bp">False</span>
<span class="o">&gt;&gt;&gt;</span> <span class="mi">6</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">t</span>
<span class="bp">True</span>
</code></pre></div></div>

<p><strong>Exercice 2</strong></p>

<ol>
  <li>Soit la liste suivante : <code class="language-plaintext highlighter-rouge">liste_pays =
["France","Allemagne","Italie","Belgique"]</code>.</li>
</ol>

<p>Que renvoie : <code class="language-plaintext highlighter-rouge">liste_pays[2]</code> ?</p>

<ol>
  <li>Quelle est la valeur rÃ©fÃ©rencÃ©e par le tableau L aprÃ¨s exÃ©cution du
programme ci-dessous ?</li>
</ol>

<!-- end list -->

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">L</span> <span class="o">=</span> <span class="p">[</span><span class="mi">731</span><span class="p">,</span> <span class="mi">732</span><span class="p">,</span> <span class="mi">734</span><span class="p">]</span>
<span class="n">L</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">L</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">L</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="n">L</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
<span class="n">M</span> <span class="o">=</span> <span class="n">L</span>
<span class="n">M</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="mi">732</span>
</code></pre></div></div>

<p><strong>RÃ©ponse 1 :</strong> [732, 731, 734] <strong>RÃ©ponse 2 :</strong> [731, 732, 734]
<strong>RÃ©ponse 3 :</strong> [732, 732, 734]</p>

<ol>
  <li>
    <p>On dÃ©finit : <code class="language-plaintext highlighter-rouge">L = [10,9,8,7,6,5,4,3,2,1]</code>. Quelle est la valeur de
<code class="language-plaintext highlighter-rouge">L[L[3]]</code> ?</p>

    <ul>
      <li><strong>RÃ©ponse 1 :</strong> 3 <strong>RÃ©ponse 2 :</strong> 4</li>
      <li><strong>RÃ©ponse 3 :</strong> 7 <strong>RÃ©ponse 4 :</strong> 8</li>
    </ul>
  </li>
  <li>
    <p>Ã‰crire une fonction <code class="language-plaintext highlighter-rouge">recherche(tab, element)</code> qui prend en paramÃ¨tre
un tableau et un Ã©lÃ©ment et qui retourne <code class="language-plaintext highlighter-rouge">True</code> si <code class="language-plaintext highlighter-rouge">element</code> est
dans <code class="language-plaintext highlighter-rouge">tab</code> et <code class="language-plaintext highlighter-rouge">False</code> sinon.</p>
  </li>
</ol>

<h1 id="construction-dun-tableau">Construction dâ€™un tableau</h1>

<p>Il existe plusieurs faÃ§ons de dÃ©finir un tableau en
<a href="https://docs.python.org/3/tutorial/datastructures.html">Python</a>.</p>

<ul>
  <li>On peut le dÃ©finir en <strong>extension</strong> en Ã©numÃ©rant toute la sÃ©quence :</li>
</ul>

<!-- end list -->

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="n">t1</span> <span class="o">=</span> <span class="p">[</span><span class="mi">8</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">11</span><span class="p">,</span><span class="mi">14</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">t2</span> <span class="o">=</span> <span class="p">[</span><span class="bp">False</span><span class="p">,</span> <span class="bp">True</span><span class="p">,</span> <span class="bp">False</span><span class="p">]</span>
</code></pre></div></div>

<p><img src="images/tableau1.png" alt="tableau1" /></p>

<ul>
  <li>On peut convertir en tableau un autre objet itÃ©rable (qui peut se
parcourir avec une boucle <code class="language-plaintext highlighter-rouge">for</code>) avec le constructeur <code class="language-plaintext highlighter-rouge">list</code>.</li>
</ul>

<!-- end list -->

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="n">t11</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="mi">5</span><span class="p">))</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">t11</span>
<span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">t12</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="s">'alphabet'</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">t12</span>
<span class="p">[</span><span class="s">'a'</span><span class="p">,</span> <span class="s">'l'</span><span class="p">,</span> <span class="s">'p'</span><span class="p">,</span> <span class="s">'h'</span><span class="p">,</span> <span class="s">'a'</span><span class="p">,</span> <span class="s">'b'</span><span class="p">,</span> <span class="s">'e'</span><span class="p">,</span> <span class="s">'t'</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="nb">list</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span>
<span class="n">Traceback</span> <span class="p">(</span><span class="n">most</span> <span class="n">recent</span> <span class="n">call</span> <span class="n">last</span><span class="p">):</span>
  <span class="n">File</span> <span class="s">"&lt;stdin&gt;"</span><span class="p">,</span> <span class="n">line</span> <span class="mi">1</span><span class="p">,</span> <span class="ow">in</span> <span class="o">&lt;</span><span class="n">module</span><span class="o">&gt;</span>
<span class="nb">TypeError</span><span class="p">:</span> <span class="s">'int'</span> <span class="nb">object</span> <span class="ow">is</span> <span class="ow">not</span> <span class="n">iterable</span>
</code></pre></div></div>

<ul>
  <li>On peut le dÃ©finir en <strong>comprÃ©hension</strong> en gÃ©nÃ©rant ses Ã©lÃ©ments par
une boucle <code class="language-plaintext highlighter-rouge">for</code> sur un itÃ©rable ( gÃ©nÃ©rateur dâ€™entiers <code class="language-plaintext highlighter-rouge">range</code>,
autre tableau â€¦) combinÃ©e Ã©ventuellement avec un filtrage par une
instruction conditionnelle :</li>
</ul>

<!-- end list -->

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="n">t3</span> <span class="o">=</span> <span class="p">[</span><span class="n">k</span> <span class="o">**</span> <span class="mi">2</span> <span class="k">for</span> <span class="n">k</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">6</span><span class="p">)]</span>  <span class="c1">#carrÃ©s des entiers entre 0 et 5
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">t3</span>
<span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">9</span><span class="p">,</span> <span class="mi">16</span><span class="p">,</span> <span class="mi">25</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">t4</span> <span class="o">=</span> <span class="p">[</span><span class="n">k</span> <span class="k">for</span> <span class="n">k</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">t2</span><span class="p">))</span> <span class="k">if</span> <span class="n">t2</span><span class="p">[</span><span class="n">k</span><span class="p">]]</span>  <span class="c1"># index des Ã©lÃ©ments de t2 de valeur True
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">t4</span>
<span class="p">[</span><span class="mi">1</span><span class="p">]</span>
</code></pre></div></div>

<p><strong>Exercice 3</strong></p>

<ol>
  <li>
    <p><em>Auteur : Germain Becker, question nÂ°326 Genumsi</em>.</p>

    <p>Quel est le tableau <code class="language-plaintext highlighter-rouge">t</code> construit par les instructions suivantes ?</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">tab</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="o">-</span><span class="mi">3</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">]</span>
<span class="n">t</span> <span class="o">=</span> <span class="p">[</span><span class="n">e</span> <span class="k">for</span> <span class="n">e</span> <span class="ow">in</span> <span class="n">tab</span> <span class="k">if</span> <span class="n">e</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="p">]</span>
</code></pre></div>    </div>

    <ul>
      <li><strong>RÃ©ponse 1 :</strong> <code class="language-plaintext highlighter-rouge">t = [1, 2, 7, 4, 10, 0]</code></li>
      <li><strong>RÃ©ponse 2 :</strong> <code class="language-plaintext highlighter-rouge">t = [e, e, e, e, e, e]</code></li>
      <li><strong>RÃ©ponse 3 :</strong> <code class="language-plaintext highlighter-rouge">t = [1, 2, 7, 4, 10]</code></li>
      <li><strong>RÃ©ponse 4 :</strong> <code class="language-plaintext highlighter-rouge">t = [-3, -1, 0]</code></li>
    </ul>
  </li>
  <li>
    <p>Quel est le rÃ©sultat de lâ€™Ã©valuation de lâ€™expression Python suivante
? <em>Auteur : Eric Rougier</em></p>

    <p><code class="language-plaintext highlighter-rouge">[2 ** n for n in range(4)]</code></p>

    <p>RÃ©ponses :</p>

    <ul>
      <li><strong>RÃ©ponse 1 :</strong> <code class="language-plaintext highlighter-rouge">[0, 2, 4, 6, 8]</code></li>
      <li><strong>RÃ©ponse 2 :</strong> <code class="language-plaintext highlighter-rouge">[1, 2, 4, 8]</code></li>
      <li><strong>RÃ©ponse 3 :</strong> <code class="language-plaintext highlighter-rouge">[0, 1, 4, 9]</code></li>
      <li><strong>RÃ©ponse 4 :</strong> <code class="language-plaintext highlighter-rouge">[1, 2, 4, 8, 16]</code></li>
    </ul>
  </li>
  <li>
    <p>Quâ€™affiche le programme
<a href="https://docs.python.org/3/tutorial/datastructures.html">Python</a>
ci-dessous ?</p>
  </li>
</ol>

<!-- end list -->

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">L</span><span class="o">=</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">]</span>
<span class="n">M</span><span class="o">=</span><span class="p">[</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">]</span>
<span class="n">N</span><span class="o">=</span><span class="p">[</span><span class="n">L</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">+</span><span class="n">M</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">L</span><span class="p">))]</span>
<span class="k">print</span><span class="p">(</span><span class="n">N</span><span class="p">)</span>
</code></pre></div></div>

<ol>
  <li>
    <p>On exÃ©cute le script suivant :</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">L</span> <span class="o">=</span> <span class="p">[</span><span class="mi">12</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">8</span><span class="p">]</span>
    
<span class="n">a</span> <span class="o">=</span> <span class="p">[</span><span class="n">elt</span> <span class="k">for</span> <span class="n">elt</span> <span class="ow">in</span> <span class="n">L</span> <span class="k">if</span> <span class="n">elt</span> <span class="o">&lt;</span> <span class="mi">4</span><span class="p">]</span>
</code></pre></div>    </div>

    <p>Quelle est la valeur de <code class="language-plaintext highlighter-rouge">a</code> Ã  la fin de son exÃ©cution ?</p>

    <ul>
      <li><strong>RÃ©ponse 1 :</strong> <code class="language-plaintext highlighter-rouge">[12,0,8]</code> <strong>RÃ©ponse 2 :</strong> <code class="language-plaintext highlighter-rouge">[12,0,8,7]</code></li>
      <li><strong>RÃ©ponse 3 :</strong> <code class="language-plaintext highlighter-rouge">[0,3,1,3]</code> <strong>RÃ©ponse 4 :</strong> <code class="language-plaintext highlighter-rouge">[0,3,1]</code></li>
    </ul>
  </li>
</ol>

<h1 id="opÃ©rations-sur-les-tableaux">OpÃ©rations sur les tableaux</h1>

<ul>
  <li>On peut concatÃ©ner deux tableaux avec lâ€™opÃ©rateur <code class="language-plaintext highlighter-rouge">+</code>, un nouveau
tableau est renvoyÃ©.</li>
</ul>

<!-- end list -->

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="n">t1</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">t2</span> <span class="o">=</span> <span class="p">[</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">t3</span> <span class="o">=</span> <span class="n">t1</span> <span class="o">+</span> <span class="n">t2</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">t3</span>
<span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">]</span>
</code></pre></div></div>

<ul>
  <li>Lâ€™opÃ©rateur <code class="language-plaintext highlighter-rouge">*</code> permet dâ€™itÃ©rer une concatÃ©nation et dâ€™initialiser
un tableau de taille quelconque avec une valeur par dÃ©faut.
Attention, câ€™est le mÃªme Ã©lÃ©ment qui est dupliquÃ© !</li>
</ul>

<!-- end list -->

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="n">t0</span> <span class="o">=</span> <span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">*</span> <span class="mi">4</span>   <span class="c1">#un tableau de taille 4 initialisÃ© Ã  0
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">t0</span>
<span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">tv</span> <span class="o">=</span> <span class="p">[</span><span class="bp">True</span><span class="p">]</span> <span class="o">*</span> <span class="mi">6</span>  <span class="c1">#un tableau de taille 6 initialisÃ© Ã  True
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">tv</span>
<span class="p">[</span><span class="bp">True</span><span class="p">,</span> <span class="bp">True</span><span class="p">,</span> <span class="bp">True</span><span class="p">,</span> <span class="bp">True</span><span class="p">,</span> <span class="bp">True</span><span class="p">,</span> <span class="bp">True</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="kn">from</span> <span class="nn">random</span> <span class="kn">import</span> <span class="n">randint</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">t1</span> <span class="o">=</span> <span class="p">[</span><span class="n">randint</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">6</span><span class="p">)</span> <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">5</span><span class="p">)]</span>  <span class="c1">#5 lancers de dÃ© Ã  6 faces
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">t1</span>
<span class="p">[</span><span class="mi">5</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">t2</span> <span class="o">=</span> <span class="p">[</span><span class="n">randint</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">6</span><span class="p">)]</span> <span class="o">*</span> <span class="mi">5</span> <span class="c1">#5 lancers de dÃ© Ã  6 faces ?
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">t2</span>                      <span class="c1">#non 5 fois le mÃªme lancer
</span><span class="p">[</span><span class="mi">5</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">5</span><span class="p">]</span>
</code></pre></div></div>

<p><strong>Exercice 4</strong></p>

<ol>
  <li>
    <p>On exÃ©cute le script suivant :</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">]</span>
<span class="n">b</span> <span class="o">=</span> <span class="p">[</span><span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">]</span>
<span class="n">c</span> <span class="o">=</span> <span class="n">a</span> <span class="o">+</span> <span class="n">b</span>
</code></pre></div>    </div>

    <p>Que contient la variable <code class="language-plaintext highlighter-rouge">c</code> Ã  la fin de cette exÃ©cution ?</p>

    <p>RÃ©ponses :</p>

    <ul>
      <li>
        <p><strong>RÃ©ponse 1 :</strong> <code class="language-plaintext highlighter-rouge">[5,7,9]</code> <strong>RÃ©ponse 2 :</strong> <code class="language-plaintext highlighter-rouge">[1,4,2,5,3,6]</code></p>
      </li>
      <li>
        <p><strong>RÃ©ponse 3 :</strong> <code class="language-plaintext highlighter-rouge">[1,2,3,4,5,6]</code> <strong>RÃ©ponse 4 :</strong> <code class="language-plaintext highlighter-rouge">[1,2,3,5,7,9]</code></p>
      </li>
    </ul>
  </li>
  <li>
    <p>Soit la fonction <code class="language-plaintext highlighter-rouge">mystere</code> ci-dessous.</p>

    <p>Quelle est la valeur retournÃ©e par
<code class="language-plaintext highlighter-rouge">mystere([831, 832, 833, 841, 842, 843])</code> ?</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">mystere</span><span class="p">(</span><span class="n">u</span><span class="p">):</span>
  <span class="n">v</span> <span class="o">=</span> <span class="p">[]</span>
  <span class="n">n</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">u</span><span class="p">)</span>
  <span class="k">for</span> <span class="n">k</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">n</span><span class="p">):</span>
    <span class="n">v</span> <span class="o">=</span> <span class="p">[</span><span class="n">u</span><span class="p">[</span><span class="n">k</span><span class="p">]]</span><span class="o">+</span><span class="n">v</span>
  <span class="k">return</span> <span class="n">v</span>
</code></pre></div>    </div>
  </li>
</ol>

<h1 id="parcours-dun-tableau">Parcours dâ€™un tableau</h1>

<p>Il existe deux faÃ§ons de parcourir un tableau en
<a href="https://docs.python.org/3/tutorial/datastructures.html">Python</a> :</p>

<ol>
  <li><strong>Le parcours par Ã©lÃ©ment</strong>, puisquâ€™un tableau de type <code class="language-plaintext highlighter-rouge">list</code> est
<strong>itÃ©rable</strong> en
<a href="https://docs.python.org/3/tutorial/datastructures.html">Python</a> :</li>
</ol>

<!-- end list -->

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="n">t6</span> <span class="o">=</span> <span class="p">[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">4</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">for</span> <span class="n">e</span> <span class="ow">in</span> <span class="n">t6</span><span class="p">:</span>
<span class="p">...</span>     <span class="k">print</span><span class="p">(</span><span class="s">"valeur : "</span><span class="p">,</span> <span class="n">e</span><span class="p">)</span>
<span class="p">...</span> 
<span class="n">valeur</span> <span class="p">:</span>  <span class="mi">3</span>
<span class="n">valeur</span> <span class="p">:</span>  <span class="mi">1</span>
<span class="n">valeur</span> <span class="p">:</span>  <span class="mi">4</span>
</code></pre></div></div>

<ol>
  <li><strong>Le parcours par index</strong>, permet de rÃ©cupÃ©rer les indexs des
Ã©lÃ©ments en plus de leurs valeurs :</li>
</ol>

<!-- end list -->

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="k">for</span> <span class="n">k</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">t6</span><span class="p">)):</span>
<span class="p">...</span>     <span class="k">print</span><span class="p">(</span><span class="s">"valeur : "</span><span class="p">,</span> <span class="n">t6</span><span class="p">[</span><span class="n">k</span><span class="p">],</span> <span class="s">" index :"</span><span class="p">,</span> <span class="n">k</span><span class="p">)</span>
<span class="p">...</span> 
<span class="n">valeur</span> <span class="p">:</span>  <span class="mi">3</span>  <span class="n">index</span> <span class="p">:</span> <span class="mi">0</span>
<span class="n">valeur</span> <span class="p">:</span>  <span class="mi">1</span>  <span class="n">index</span> <span class="p">:</span> <span class="mi">1</span>
<span class="n">valeur</span> <span class="p">:</span>  <span class="mi">4</span>  <span class="n">index</span> <span class="p">:</span> <span class="mi">2</span>
</code></pre></div></div>

<p><strong>Exercice 5</strong></p>

<ol>
  <li>
    <p>Ã‰crire une fonction <code class="language-plaintext highlighter-rouge">occurences(v, t)</code> qui retourne le nombre
dâ€™occurences de la valeur <code class="language-plaintext highlighter-rouge">v</code> dans le tableau <code class="language-plaintext highlighter-rouge">t</code>.</p>
  </li>
  <li>
    <p><em>Auteur : Nicolas RÃ©veret, question nÂ°379 Genumsi</em></p>

    <p>On a saisi le code suivant :</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">liste</span> <span class="o">=</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">]</span>
<span class="n">compteur</span> <span class="o">=</span> <span class="mi">0</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">liste</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">:</span>
    <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="nb">len</span><span class="p">(</span><span class="n">liste</span><span class="p">))</span> <span class="p">:</span>
        <span class="n">compteur</span> <span class="o">+=</span> <span class="mi">1</span>
</code></pre></div>    </div>

    <p>Que contient la variable compteur Ã  la fin de lâ€™exÃ©cution de ce
script ?</p>
  </li>
  <li>
    <p>Revenons sur notre situation dâ€™accroche.</p>
  </li>
</ol>

<!-- end list -->

<ul>
  <li>Ã‰crire une fonction <code class="language-plaintext highlighter-rouge">somme(tab)</code> qui retourne la somme des Ã©lÃ©ments
dâ€™un tableau de nombres <code class="language-plaintext highlighter-rouge">tab</code>.</li>
  <li>Ã‰crire une fonction <code class="language-plaintext highlighter-rouge">moyenne_arithmetique(tab)</code> qui retourne la
moyenne arithmÃ©tique des Ã©lÃ©ments dâ€™un tableau de nombres <code class="language-plaintext highlighter-rouge">tab</code>.</li>
</ul>

<!-- end list -->

<ol>
  <li>
    <p>En voulant programmer une fonction qui calcule la valeur minimale
dâ€™un tableau dâ€™entiers, on a Ã©crit :</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">minimum</span><span class="p">(</span><span class="n">L</span><span class="p">):</span>
    <span class="n">mini</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="k">for</span> <span class="n">e</span> <span class="ow">in</span> <span class="n">L</span><span class="p">:</span>
        <span class="k">if</span> <span class="n">e</span> <span class="o">&lt;</span> <span class="n">mini</span><span class="p">:</span>
            <span class="n">mini</span> <span class="o">=</span> <span class="n">e</span>
    <span class="k">return</span> <span class="n">mini</span>
</code></pre></div>    </div>

    <p>Cette fonction a Ã©tÃ© mal programmÃ©e. Pour quel tableau ne
donnera-t-elle pas le rÃ©sultat attendu, câ€™est-Ã -dire son minimum ?</p>

    <p>RÃ©ponses :</p>

    <ul>
      <li><strong>RÃ©ponse 1 :</strong> <code class="language-plaintext highlighter-rouge">[-1,-8,12,2,23]</code></li>
      <li><strong>RÃ©ponse 2:</strong> <code class="language-plaintext highlighter-rouge">[0,18,12,2,3]</code></li>
      <li><strong>RÃ©ponse 3:</strong> <code class="language-plaintext highlighter-rouge">[-1,-1,12,12,23]</code></li>
      <li><strong>RÃ©ponse 4:</strong> <code class="language-plaintext highlighter-rouge">[1,8,12,2,23]</code></li>
    </ul>
  </li>
  <li>
    <p>Ã‰crire une fonction <code class="language-plaintext highlighter-rouge">max_tab(tab)</code> qui retourne le maximum dâ€™un
tableau de nombres passÃ© en paramÃ¨tre.</p>
  </li>
</ol>

<h1 id="aliasing">Aliasing</h1>

<h2 id="aliasing-et-copie-de-tableau">Aliasing et copie de tableau</h2>

<p><strong>Point de cours 2</strong></p>

<ul>
  <li>
    <p>Pour les tableaux (type <code class="language-plaintext highlighter-rouge">list</code>), comme pour les autres types
construits, le mÃ©canisme de lâ€™affectation de variable en
<a href="https://docs.python.org/3/tutorial/datastructures.html">Python</a>
diffÃ¨re de celui des types base : <code class="language-plaintext highlighter-rouge">int, float, bool</code>). Lors de
lâ€™affectation <code class="language-plaintext highlighter-rouge">tab = [6, 3, 1]</code>, la variable <code class="language-plaintext highlighter-rouge">tab</code> ne reÃ§oit pas
comme valeur les Ã©lÃ©ments du tableau mais une <strong>rÃ©fÃ©rence</strong> vers la
zone mÃ©moire oÃ¹ ils sont effectivement stockÃ©s. Ce mÃ©canisme est
dÃ©signÃ© par le terme <em>dâ€™aliasing</em>.</p>
  </li>
  <li>
    <p>Illustrons ces diffÃ©rences en dÃ©roulant une sÃ©quence dâ€™affectations
avec
<a href="http://pythontutor.com/visualize.html#mode=edit">Python-tutor</a>, oÃ¹
lâ€™on copie par affectation une variable de type <code class="language-plaintext highlighter-rouge">int</code> puis une
variable de type <code class="language-plaintext highlighter-rouge">list</code>.</p>

    <ul>
      <li><strong>Ã‰tape 1 :</strong> Si <code class="language-plaintext highlighter-rouge">a</code> est de type de base (ici <code class="language-plaintext highlighter-rouge">int</code>),
lâ€™affectation <code class="language-plaintext highlighter-rouge">b = a</code> assigne Ã  la variable <code class="language-plaintext highlighter-rouge">b</code> une copie de
la valeur de la variable <code class="language-plaintext highlighter-rouge">a</code> (ici 50.)</li>
    </ul>

    <p><img src="images/aliasing1.png" alt="aliasing1" /></p>

    <ul>
      <li><strong>Ã‰tape 2 :</strong> Si on modifie la valeur de <code class="language-plaintext highlighter-rouge">b</code>, la variable <code class="language-plaintext highlighter-rouge">a</code>
nâ€™est pas touchÃ©e, les deux variables sont indÃ©pendantes.</li>
    </ul>

    <p><img src="images/aliasing2.png" alt="aliasing2" /></p>

    <ul>
      <li><strong>Ã‰tape 3 :</strong> Si on affecte le tableau <code class="language-plaintext highlighter-rouge">[14, 18]</code> Ã  la variable
<code class="language-plaintext highlighter-rouge">t1</code>, celle-ci ne prend pas pour valeur directement la sÃ©quence
dâ€™Ã©lÃ©ments du tableau mais une <strong>rÃ©fÃ©rence</strong> vers cette
sÃ©quence.</li>
    </ul>

    <p><img src="images/aliasing3.png" alt="aliasing3" /></p>

    <ul>
      <li>
        <p><strong>Ã‰tape 4 :</strong> Si <code class="language-plaintext highlighter-rouge">t1</code> est de type construit (ici <code class="language-plaintext highlighter-rouge">list</code>),
lâ€™affectation <code class="language-plaintext highlighter-rouge">t2 = t1</code> assigne Ã  la variable <code class="language-plaintext highlighter-rouge">t2</code> une copie
de la valeur de la variable <code class="language-plaintext highlighter-rouge">t1</code> comme pour les types de base,
sauf que la valeur de <code class="language-plaintext highlighter-rouge">t1</code> est une <strong>rÃ©fÃ©rence</strong>. On dit que
<code class="language-plaintext highlighter-rouge">t1</code> et <code class="language-plaintext highlighter-rouge">t2</code> partagent la mÃªme rÃ©fÃ©rence.</p>

        <p><img src="images/aliasing4.png" alt="aliasing4" /></p>
      </li>
      <li>
        <p><strong>Ã‰tape 5 :</strong> Comme <code class="language-plaintext highlighter-rouge">t1</code> et <code class="language-plaintext highlighter-rouge">t2</code> partagent la mÃªme rÃ©fÃ©rence,
toute modification de <code class="language-plaintext highlighter-rouge">t1</code> touche <code class="language-plaintext highlighter-rouge">t2</code> et vice-versa. On parle
<strong>dâ€™effet de bord</strong>. Attention, il faut bien comprendre ce
mÃ©canisme pour Ã©viter les effets de bord indÃ©sirables !</p>

        <p><img src="images/aliasing5.png" alt="aliasing5" /></p>

        <p><img src="images/aliasing6.png" alt="aliasing6" /></p>
      </li>
    </ul>
  </li>
  <li>
    <p>On peut rÃ©aliser une <strong>copie superficielle</strong> (ou <em>shallow copy</em>)
dâ€™un tableau ou dâ€™une variable de type construit avec le mÃ©canisme
de <em>slicing</em>. Noys y reviendrons plus tard, pour les structures
imbriquÃ©es (tableaux de tableaux), il faudra copier rÃ©cursivement
les valeurs correspondant Ã  toutes les rÃ©fÃ©rences avec une <strong>copie
profonde</strong>. Le module <code class="language-plaintext highlighter-rouge">copy</code> propose une fonction <code class="language-plaintext highlighter-rouge">copy</code> pour la
copy superficielle et une fonction <code class="language-plaintext highlighter-rouge">deepcopy</code> pour la copie
profonde.</p>

    <p><img src="images/shallow-copy.png" alt="shallow copy" /></p>
  </li>
</ul>

<p><strong>Exercice 6</strong></p>

<ol>
  <li>
    <p>Ã‰crire une fonction <code class="language-plaintext highlighter-rouge">copie(tab)</code> qui retourne une copie
superficielle du tableau <code class="language-plaintext highlighter-rouge">tab</code> sans utiliser de <em>slicing</em>.</p>
  </li>
  <li>
    <p><em>Auteur : Nicolas RevÃ©ret</em></p>

    <p>On considÃ¨re le code suivant :</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">f</span><span class="p">(</span><span class="n">tab</span><span class="p">):</span>
  <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">tab</span><span class="p">)</span><span class="o">//</span><span class="mi">2</span><span class="p">):</span>
    <span class="n">tab</span><span class="p">[</span><span class="n">i</span><span class="p">],</span><span class="n">tab</span><span class="p">[</span><span class="o">-</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">tab</span><span class="p">[</span><span class="o">-</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">],</span><span class="n">tab</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>
</code></pre></div>    </div>

    <p>AprÃ¨s les lignes suivantes :</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">tab</span> <span class="o">=</span> <span class="p">[</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">]</span>
<span class="n">f</span><span class="p">(</span><span class="n">tab</span><span class="p">)</span>
</code></pre></div>    </div>

    <p>Quelle est la valeur de la variable <code class="language-plaintext highlighter-rouge">tab</code> ?</p>

    <p>RÃ©ponses :</p>

    <ul>
      <li><strong>RÃ©ponse 1</strong> <code class="language-plaintext highlighter-rouge">[2,3,4,5,7,8]</code> <strong>RÃ©ponse 2</strong> <code class="language-plaintext highlighter-rouge">[5,7,8,2,3,4]</code></li>
      <li><strong>RÃ©ponse 3</strong> <code class="language-plaintext highlighter-rouge">[8,7,5,4,3,2]</code> <strong>RÃ©ponse 4</strong> <code class="language-plaintext highlighter-rouge">[4,3,2,8,7,5]</code></li>
    </ul>
  </li>
</ol>

<h2 id="aliasing-et-passage-de-tableau-en-paramÃ¨tre-dune-fonction">Aliasing et passage de tableau en paramÃ¨tre dâ€™une fonction</h2>

<p>En <a href="https://docs.python.org/3/tutorial/datastructures.html">Python</a>,
lorsquâ€™on appelle une fonction avec des <strong>paramÃ¨tres effectifs</strong>, les
<strong>paramÃ¨tres formels</strong> apparaissant dans la signature de la fonction,
deviennent des variables locales Ã  la fonction et reÃ§oivent comme
valeurs des copies des valeurs des paramÃ¨tres effectifs. Les types
construits, comme les tableaux de type <code class="language-plaintext highlighter-rouge">list</code>, ayant pour valeur une
rÃ©fÃ©rence, le paramÃ¨tre formel va partager la mÃªme rÃ©fÃ©rence et on va
retrouver les mÃªmes effets de bord que dans la copie de tableau par
affectation.</p>

<ul>
  <li>
    <p><strong>Ã‰tape 1 :</strong> On dÃ©finit une variable globale <code class="language-plaintext highlighter-rouge">a</code> de type <code class="language-plaintext highlighter-rouge">int</code>, une
variable <code class="language-plaintext highlighter-rouge">t1</code> de type <code class="language-plaintext highlighter-rouge">list</code> (un tableau), une fonction
<code class="language-plaintext highlighter-rouge">incremente(x)</code> qui incrÃ©mente la valeur du paramÃ¨tre <code class="language-plaintext highlighter-rouge">x</code> de type
<code class="language-plaintext highlighter-rouge">int</code> et une fonction <code class="language-plaintext highlighter-rouge">incremente_tab(tab)</code> qui incrÃ©mente tous les
Ã©lÃ©ments du paramÃ¨tre <code class="language-plaintext highlighter-rouge">tab</code>de type <code class="language-plaintext highlighter-rouge">list</code>.</p>

    <p><img src="images/aliasing-fonction1.png" alt="fonction aliasing1" /></p>
  </li>
  <li>
    <p><strong>Ã‰tape 2 :</strong> On appelle <code class="language-plaintext highlighter-rouge">incremente(a)</code> et on affecte la valeur
retournÃ©e Ã  une variable <code class="language-plaintext highlighter-rouge">b</code>. Lors de lâ€™appel, le paramÃ¨tre formel
<code class="language-plaintext highlighter-rouge">x</code> prend pour valeur une copie de la valeur du paramÃ¨tre effectif
<code class="language-plaintext highlighter-rouge">a</code>. La fonction retourne la valeur 6 aprÃ¨s incrÃ©mentation de la
variable <code class="language-plaintext highlighter-rouge">x</code>, les variables globale <code class="language-plaintext highlighter-rouge">a</code> et locale <code class="language-plaintext highlighter-rouge">x</code> sont
indÃ©pendantes. <code class="language-plaintext highlighter-rouge">x</code> disparaÃ®t dÃ¨s que lâ€™appel de fonction se
termine.</p>

    <p><img src="images/aliasing-fonction2.png" alt="fonction aliasing2" /></p>

    <p><img src="images/aliasing-fonction25.png" alt="fonction aliasing2" /></p>
  </li>
  <li>
    <p><strong>Ã‰tape 3 :</strong> La variable globale <code class="language-plaintext highlighter-rouge">b</code> a Ã©tÃ© affectÃ©e avec 6 la
valeur retournÃ©e par <code class="language-plaintext highlighter-rouge">incremente(a)</code>. La variable <code class="language-plaintext highlighter-rouge">a</code> nâ€™a pas Ã©tÃ©
modifiÃ©e par effet de bord,. Lors de lâ€™appel <code class="language-plaintext highlighter-rouge">incremente_tab(t1)</code>,
le paramÃ¨tre formel <code class="language-plaintext highlighter-rouge">tab</code> est affectÃ© avec une copie de la valeur du
paramÃ¨tre effectif <code class="language-plaintext highlighter-rouge">t1</code>. Ce dernier nâ€™est pas de type de base comme
<code class="language-plaintext highlighter-rouge">a</code>, mais de type construit <code class="language-plaintext highlighter-rouge">list</code> donc sa valeur est un rÃ©fÃ©rence.</p>

    <p><img src="images/aliasing-fonction3.png" alt="fonction aliasing3" /></p>
  </li>
  <li>
    <p><strong>Ã‰tape 4 :</strong> La variable locale <code class="language-plaintext highlighter-rouge">tab</code> et la variable globale <code class="language-plaintext highlighter-rouge">t1</code>
partagent une mÃªme rÃ©fÃ©rence : la fonction <code class="language-plaintext highlighter-rouge">incremente_tab</code> peut
modifier le tableau rÃ©fÃ©rencÃ© . La fonction <code class="language-plaintext highlighter-rouge">incremente_tab</code> renvoie
<code class="language-plaintext highlighter-rouge">None</code> mÃªme si elle ne contient pas dâ€™instruction <code class="language-plaintext highlighter-rouge">return</code>. AprÃ¨s
lâ€™appel de fonction, la variable globale <code class="language-plaintext highlighter-rouge">t1</code> a Ã©tÃ© modifiÃ©e par
par <strong>effet de bord</strong>. Une fonction qui modifie lâ€™Ã©tat de la mÃ©moire
du programme principale, sans renvoyer de valeur, sâ€™appelle une
<strong>procÃ©dure</strong>.</p>

    <p><img src="images/aliasing-fonction4.png" alt="fonction aliasing4" /></p>

    <p><img src="images/aliasing-fonction5.png" alt="fonction aliasing5" /></p>

    <p><img src="images/aliasing-fonction6.png" alt="fonction aliasing6" /></p>
  </li>
</ul>

<p><strong>Exercice 7</strong></p>

<ol>
  <li>
    <p>On veut Ã©crire une procÃ©dure <code class="language-plaintext highlighter-rouge">echange(tab, i, j)</code> qui Ã©change les
Ã©lÃ©ments dâ€™index <code class="language-plaintext highlighter-rouge">i</code> et <code class="language-plaintext highlighter-rouge">j</code> dâ€™un tableau <code class="language-plaintext highlighter-rouge">tab</code>. On fournit le
modÃ¨le ci-dessous :</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">echange</span><span class="p">(</span><span class="n">tab</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">):</span>
  <span class="k">assert</span> <span class="mi">0</span> <span class="o">&lt;=</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="nb">len</span><span class="p">(</span><span class="n">tab</span><span class="p">)</span> <span class="ow">and</span> <span class="mi">0</span> <span class="o">&lt;=</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="nb">len</span><span class="p">(</span><span class="n">tab</span><span class="p">),</span> <span class="s">"message d'erreur"</span>
  <span class="c1"># Ã  complÃ©ter
</span></code></pre></div>    </div>

    <ul>
      <li>Remplacer le message dâ€™erreur de lâ€™assertion par un message
pertinent.</li>
      <li>ComplÃ©ter la fonction.</li>
    </ul>
  </li>
  <li>
    <p>Ã‰crire une procÃ©dure <code class="language-plaintext highlighter-rouge">permutation_circulaire(tab)</code> qui modifie la
position des Ã©lÃ©ments du tableau <code class="language-plaintext highlighter-rouge">tab</code> par permutation circulaire de
gauche Ã  droite :</p>
  </li>
</ol>

<!-- end list -->

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="n">t</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="mi">6</span><span class="p">))</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">t</span>
<span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">permutation_circulaire</span><span class="p">(</span><span class="n">t</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">t</span>
<span class="p">[</span><span class="mi">5</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">permutation_circulaire</span><span class="p">(</span><span class="n">t</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">t</span>
<span class="p">[</span><span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">]</span>
</code></pre></div></div>

<h1 id="mÃ©thodes-de-tableau-dynamique-en-python">MÃ©thodes de tableau dynamique en Python</h1>

<p>Les tableaux
<a href="https://docs.python.org/3/tutorial/datastructures.html">Python</a> sont
dynamiques câ€™est-Ã -dire que leur taille peut Ã©voluer. Pour un tableau
<code class="language-plaintext highlighter-rouge">tab</code>, les fonctions permettant dâ€™ajouter ou enlever des Ã©lÃ©ments sont
des <strong>mÃ©thodes</strong> de lâ€™objet <code class="language-plaintext highlighter-rouge">tab</code> qui sâ€™utilisent avec la notation
pointÃ©e <code class="language-plaintext highlighter-rouge">tab.methode(parametres)</code>. Un tableau Ã©tant de type <code class="language-plaintext highlighter-rouge">list</code> il
est Ã©quivalent dâ€™Ã©crire <code class="language-plaintext highlighter-rouge">list.methode(tab, parametres)</code>.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="n">t</span> <span class="o">=</span> <span class="p">[]</span>   <span class="c1">#tableau vide
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">t</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="mi">8</span><span class="p">)</span>  <span class="c1">#ajout de l'Ã©lÃ©ment 8 Ã  la fin de t
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">t</span>
<span class="p">[</span><span class="mi">8</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="nb">list</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">t</span><span class="p">,</span> <span class="mi">7</span><span class="p">)</span>  <span class="c1">#ajout de l'Ã©lÃ©ment 7 Ã  la fin de t
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">t</span>
<span class="p">[</span><span class="mi">8</span><span class="p">,</span> <span class="mi">7</span><span class="p">]</span>
</code></pre></div></div>

<ul>
  <li>On peut ajouter un Ã©lÃ©ment Ã  la fin dâ€™un tableau avec la mÃ©thode
<code class="language-plaintext highlighter-rouge">append</code>. On peut ainsi peupler un tableau initialement vide.</li>
</ul>

<!-- end list -->

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="n">t5</span> <span class="o">=</span> <span class="p">[]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">for</span> <span class="n">k</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">3</span><span class="p">):</span>
<span class="p">...</span>     <span class="n">t5</span> <span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">k</span> <span class="o">**</span> <span class="mi">2</span><span class="p">)</span>
<span class="p">...</span> 
<span class="o">&gt;&gt;&gt;</span> <span class="n">t5</span>
<span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">4</span><span class="p">]</span>
</code></pre></div></div>

<ul>
  <li>On peut insÃ©rer un Ã©lÃ©ment avec la mÃ©thode <code class="language-plaintext highlighter-rouge">insert</code> qui prend en
paramÃ¨tre lâ€™index de lâ€™Ã©lÃ©ment une fois insÃ©rÃ©. Les Ã©lÃ©ments Ã  sa
droite Ã©tant tous dÃ©calÃ©s vers la droite, lâ€™insertion peut
reprÃ©senter un coÃ»t proportionnel Ã  la taille du tableau si elle se
fait au dÃ©but du tableau.</li>
</ul>

<!-- end list -->

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="n">t</span> <span class="o">=</span> <span class="p">[</span><span class="s">'a'</span><span class="p">,</span> <span class="s">'c'</span><span class="p">,</span> <span class="s">'d'</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">t</span><span class="p">.</span><span class="n">insert</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="s">'b'</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">t</span>
<span class="p">[</span><span class="s">'a'</span><span class="p">,</span> <span class="s">'b'</span><span class="p">,</span> <span class="s">'c'</span><span class="p">,</span> <span class="s">'d'</span><span class="p">]</span>
</code></pre></div></div>

<ul>
  <li>
    <p>On peut extraire un Ã©lÃ©ment de deux faÃ§ons :</p>

    <ul>
      <li>Ã€ partir de son index, avec la mÃ©thode <code class="language-plaintext highlighter-rouge">pop</code>, qui prend pour
paramÃ¨tre lâ€™index de lâ€™Ã©lÃ©ment extrait, le dernier par dÃ©faut.
Tous les Ã©lÃ©ments Ã  droite de lâ€™Ã©lÃ©ment extrait doivent Ãªtre
dÃ©calÃ©s vers la gauche, ce qui peut reprÃ©senter un coÃ»t
proportionnel Ã  la taille du tableau si lâ€™extraction se fait au
dÃ©but du tableau.</li>
    </ul>

    <!-- end list -->

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="n">carac</span> <span class="o">=</span> <span class="p">[</span><span class="nb">chr</span><span class="p">(</span><span class="n">k</span><span class="p">)</span> <span class="k">for</span> <span class="n">k</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">ord</span><span class="p">(</span><span class="s">'a'</span><span class="p">),</span> <span class="nb">ord</span><span class="p">(</span><span class="s">'g'</span><span class="p">))]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">carac</span>
<span class="p">[</span><span class="s">'a'</span><span class="p">,</span> <span class="s">'b'</span><span class="p">,</span> <span class="s">'c'</span><span class="p">,</span> <span class="s">'d'</span><span class="p">,</span> <span class="s">'e'</span><span class="p">,</span> <span class="s">'f'</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">carac</span><span class="p">.</span><span class="n">pop</span><span class="p">()</span>
<span class="s">'f'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">carac</span>
<span class="p">[</span><span class="s">'a'</span><span class="p">,</span> <span class="s">'b'</span><span class="p">,</span> <span class="s">'c'</span><span class="p">,</span> <span class="s">'d'</span><span class="p">,</span> <span class="s">'e'</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">carac</span><span class="p">.</span><span class="n">pop</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
<span class="s">'a'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">carac</span>
<span class="p">[</span><span class="s">'b'</span><span class="p">,</span> <span class="s">'c'</span><span class="p">,</span> <span class="s">'d'</span><span class="p">,</span> <span class="s">'e'</span><span class="p">]</span>
</code></pre></div>    </div>

    <ul>
      <li>Ã€ partir de sa valeur avec la mÃ©thode <code class="language-plaintext highlighter-rouge">remove</code>, la premiÃ¨re
occurence trouvÃ©e de lâ€™Ã©lÃ©ment passÃ©e en paramÃ¨tre est
supprimÃ©e. Encore une fois, le coÃ»t peut Ãªtre proportionnel Ã 
la taille du tableau si la suppression se fait au dÃ©but.</li>
    </ul>

    <!-- end list -->

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="n">t</span> <span class="o">=</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">t</span> <span class="o">=</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">2</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">t</span><span class="p">.</span><span class="n">remove</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">t</span>
<span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">2</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">t</span><span class="p">.</span><span class="n">remove</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
<span class="n">Traceback</span> <span class="p">(</span><span class="n">most</span> <span class="n">recent</span> <span class="n">call</span> <span class="n">last</span><span class="p">):</span>
  <span class="n">File</span> <span class="s">"&lt;stdin&gt;"</span><span class="p">,</span> <span class="n">line</span> <span class="mi">1</span><span class="p">,</span> <span class="ow">in</span> <span class="o">&lt;</span><span class="n">module</span><span class="o">&gt;</span>
<span class="nb">ValueError</span><span class="p">:</span> <span class="nb">list</span><span class="p">.</span><span class="n">remove</span><span class="p">(</span><span class="n">x</span><span class="p">):</span> <span class="n">x</span> <span class="ow">not</span> <span class="ow">in</span> <span class="nb">list</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p>On peut compter le nombre dâ€™occurences dâ€™un Ã©lÃ©ment dans un tableau
avec la mÃ©thode <code class="language-plaintext highlighter-rouge">count</code>.</p>
  </li>
</ul>

<!-- end list -->

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="n">t</span> <span class="o">=</span> <span class="p">[</span><span class="n">randint</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">6</span><span class="p">)</span> <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1_000_000</span><span class="p">)]</span>  <span class="c1">#10**6 lancers de dÃ©s 
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">t</span><span class="p">.</span><span class="n">count</span><span class="p">(</span><span class="mi">6</span><span class="p">)</span>  <span class="c1">#nombre de 6, cohÃ©rent non ?
</span><span class="mi">166821</span>
</code></pre></div></div>

<p><strong>Exercice 8</strong></p>

<ol>
  <li>
    <p>Ã‰crire une fonction fonction <code class="language-plaintext highlighter-rouge">filtre_notes(tab)</code> qui extrait toutes
les notes infÃ©rieures Ã  10 dâ€™un tableau de notes entre 0 et 20 et
les renvoie dans un autre tableau.</p>
  </li>
  <li>
    <p>Ã‰crire une fonction renvoyant le maximum dâ€™un tableau passÃ© en
paramÃ¨tre et le tableau des positions oÃ¹ ce maximum est atteint.</p>
  </li>
  <li>
    <p>On dÃ©finit en Python la fonction suivante :</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">f</span><span class="p">(</span><span class="n">L</span><span class="p">):</span>
    <span class="n">S</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">L</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">):</span>
        <span class="n">S</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">L</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">+</span> <span class="n">L</span><span class="p">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">])</span>
    <span class="k">return</span> <span class="n">S</span>
</code></pre></div>    </div>

    <p>Quel est le tableau renvoyÃ© par <code class="language-plaintext highlighter-rouge">f([1, 2, 3, 4, 5, 6])</code>Â ?</p>

    <ul>
      <li><strong>RÃ©ponse 1</strong> <code class="language-plaintext highlighter-rouge">[3, 5, 7, 9, 11, 13]</code></li>
      <li><strong>RÃ©ponse 2</strong> <code class="language-plaintext highlighter-rouge">[1, 3, 5, 7, 9, 11]</code></li>
      <li><strong>RÃ©ponse 3</strong> <code class="language-plaintext highlighter-rouge">[3, 5, 7, 9, 11]</code></li>
      <li><strong>RÃ©ponse 4</strong> cet appel de fonction dÃ©clenche un message
dâ€™erreur</li>
    </ul>
  </li>
</ol>
:ET